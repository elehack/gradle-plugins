import net.elehack.gradle.util.MultiExec

import java.nio.file.Files

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath fileTree(projectLibDir) {
            exclude '*-sources.jar'
            exclude '*-javadoc.jar'
        }
    }
}

task pandoc(type: MultiExec) {
    source projectDir
    include '*.txt'
    outputMapping { it.name - '.txt' + '.html' }
    exec { src, dst ->
        executable 'pandoc'
        workingDir projectDir
        args '-o', dst
        args src
    }
}

task parallel(type: MultiExec) {
    source projectDir
    include '*.txt'
    threadCount 2
    outputMapping { it.name - '.txt' + '.2.html' }
    exec { src, dst ->
        executable 'pandoc'
        workingDir projectDir
        args '-o', dst
        args src
    }
}

task verify(dependsOn: [pandoc, parallel]) {
    doLast {
        for (f in ['bar.html', 'foo.html', 'bar.2.html', 'foo.2.html']) {
            if (!file(f).exists()) {
                throw new RuntimeException("expected file $f doesn't exist")
            }
        }
    }
}